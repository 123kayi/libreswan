From: Daniel Kahn Gillmor <dkg@fifthhorseman.net>
Date: Sun, 19 Jun 2016 12:51:39 -0400
Subject: fix variant default NSS dir (documentation and code)

when the default NSS dir varies from upstream defaults, some code
doesn't work properly, and some documentation is wrong.

This fixes the code and the documentation to make them work with the
preferred default FHS-compliant paths for debian.

The most unpleasant code change here is in lib/libswan/lswconf.c,
where --ipsecdir no longer affects the location of the NSS directory.
This has been decoupled from /etc/ipsec.d/policies because we expect
/etc/ipsec.d/policies to be manually controlled by the admin, while we
expect the NSS database to be controlled programmatically by libreswan
(e.g. "ipsec import", "ipsec rsasigkey", "ipsec rsanewhostkey", etc).

The documentation changes, at least, are not applicable upstream
because they hardcode the preferred debian path.  A better fix for
upstream would be to parameterize/substitute the documentation
sources (maybe xml.in would work, i haven't tried it yet)
---
 README.nss                                   | 17 ++++++++---------
 programs/_import_crl/ipsec__import_crl.8.xml |  2 +-
 programs/auto/ipsec_auto.8.xml               |  4 ++--
 programs/configs/d.ipsec.conf/ipsecdir.xml   | 14 ++++----------
 programs/ipsec/ipsec_import.8.xml            |  2 +-
 programs/ipsec/ipsec_initnss.8.xml           |  3 ++-
 programs/look/look.in                        |  4 ++--
 programs/newhostkey/ipsec_newhostkey.8.xml   |  7 ++++---
 programs/pluto/ipsec_pluto.8.xml             |  2 +-
 programs/pluto/plutomain.c                   |  3 ++-
 programs/rsasigkey/ipsec_rsasigkey.8.xml     |  6 +++---
 programs/rsasigkey/rsasigkey.c               |  4 ++--
 programs/showhostkey/showhostkey.c           |  2 +-
 13 files changed, 33 insertions(+), 37 deletions(-)

diff --git a/README.nss b/README.nss
index d1cef45..d018eec 100644
--- a/README.nss
+++ b/README.nss
@@ -62,7 +62,7 @@ using:
 
 	ipsec initnss
 
-By default the NSS db is created in /etc/ipsec.d/
+By default the NSS db is created in /var/lib/libreswan/nss
 
 When creating a database, you are prompted for a password. The default
 libreswan package install for RHEL/Fedora/CentOS uses an empty password.
@@ -72,7 +72,7 @@ running in FIPS mode.
 
 To change the empty password, run:
 
-	certutil -W -d sql:/etc/ipsec.d
+	certutil -W -d sql:/var/lib/libreswan/nss
 
 Enter return for the "old password", then enter your new password.
 
@@ -110,8 +110,7 @@ The "ipsec newhostkey" and "ipsec rsasigkey" utilities are used for
 creating raw RSA keys. If a non-default NSS directory is used, this can
 be specified using the -d option.
 
-	ipsec newhostkey --configdir /etc/ipsec.d [--password password] \
-		--output /etc/ipsec.secrets
+	ipsec newhostkey [--password password]
 
 The password is only required if the NSS database is protected with a
 non-empty password.  All "private" compontents of the raw RSA key in
@@ -139,7 +138,7 @@ Below, we will be using the nss tools to generate certificates
 * To create a certificate authority (CA certficate):
 
 	certutil -S -k rsa -n "ExampleCA" -s "CN=Example CA Inc" -w 12 \
-		-t "CT,," -x -d sql:/etc/ipsec.d
+		-t "CT,," -x -d sql:/var/lib/libreswan/nss
 
 It creates a certificate with RSA keys (-k rsa) with the nick name
 "ExampleCA", and with common name "Example CA Inc". The option
@@ -154,7 +153,7 @@ certificate can be obtained from anywhere in the world.
 * To create a user certificate signed by the above CA
 
 	certutil -S -k rsa -c "ExampleCA" -n "user1" -s "CN=User Common Name" \
-		-w 12 -t "u,u,u" -d sql:/etc/ipsec.d
+		-w 12 -t "u,u,u" -d sql:/var/lib/libreswan/nss
 
 It creates a user cert with nick name "user1" with attributes
 "u,u,u" signed by the CA cert "ExampleCA".
@@ -210,7 +209,7 @@ Now you can import the file into the NSS db:
 
 	ipsec import certkey.p12
 
-NOTE: the ipsec command uses "pk12util -i certkey.p12 -d /etc/ipsec.d"
+NOTE: the ipsec command uses "pk12util -i certkey.p12 -d /var/lib/libreswan/nss"
 
 If you did not pick a name using the -name option, you can use
 certutil -L -d /etc/ipsec.d to figure out the name NSS picked durnig
@@ -234,12 +233,12 @@ Paul: add "ipsec export" ?
 
 To export the CA certificate:
 
-	NSS_DEFAULT_DB_TYPE="sql:" pk12util -o cacert1.p12 -n cacert1 -d /etc/ipsec.d
+	NSS_DEFAULT_DB_TYPE="sql:" pk12util -o cacert1.p12 -n cacert1 -d /var/lib/libreswan/nss
 
 Copy the file "cacert1.p12" to the new machine and import it using:
 
 	ipsec import cacert1.p12
-	certutil -M -n cacert1 -t "CT,," -d sql:/etc/ipsec.d
+	certutil -M -n cacert1 -t "CT,," -d sql:/var/lib/libreswan/nss
 
 Example connection for ipsec.conf:
 
diff --git a/programs/_import_crl/ipsec__import_crl.8.xml b/programs/_import_crl/ipsec__import_crl.8.xml
index 6b250db..8e9e0a9 100644
--- a/programs/_import_crl/ipsec__import_crl.8.xml
+++ b/programs/_import_crl/ipsec__import_crl.8.xml
@@ -23,7 +23,7 @@
 <para><emphasis remap='I'>_import_crl</emphasis>
 is spawned by
 <emphasis remap='B'>pluto</emphasis>
-in order to add or update a CRL in the NSS database (default: /etc/ipsec.d)</para>
+in order to add or update a CRL in the NSS database (default: /var/lib/libreswan/nss)</para>
 </refsect1>
 
 <refsect1 id='see_also'><title>SEE ALSO</title>
diff --git a/programs/auto/ipsec_auto.8.xml b/programs/auto/ipsec_auto.8.xml
index e6ec853..10c9db3 100644
--- a/programs/auto/ipsec_auto.8.xml
+++ b/programs/auto/ipsec_auto.8.xml
@@ -252,7 +252,7 @@ but that may change.)</para>
 </para>
 <para>      The  <option>--listcerts</option>  operation  lists  all  X.509 certificates
        loaded  locally  using  the  rightcert  and  leftcert   parameters   in
-       ipsec.conf(5). To see all certificates in the NSS database, use <option>certutil -d /etc/ipsec.d -L</option>.
+       ipsec.conf(5). To see all certificates in the NSS database, use <option>certutil -d /var/lib/libreswan/nss -L</option>.
 </para>
 <para>      The  <option>--checkpubkeys</option>  operation  lists  all loaded X.509 certificates
        which are about to expire or have been expired.
@@ -317,7 +317,7 @@ for details of the configuration file.
 <para>
 <literallayout remap='.nf'>
 /etc/ipsec.conf			default IPSEC configuration file
-/etc/ipsec.d/			X.509 and Opportunistic Encryption files
+/var/lib/libreswan/nss		X.509 and Opportunistic Encryption files
 /var/run/pluto/pluto.ctl	Pluto command socket
 </literallayout>
 </para>
diff --git a/programs/configs/d.ipsec.conf/ipsecdir.xml b/programs/configs/d.ipsec.conf/ipsecdir.xml
index 954a088..294f424 100644
--- a/programs/configs/d.ipsec.conf/ipsecdir.xml
+++ b/programs/configs/d.ipsec.conf/ipsecdir.xml
@@ -23,16 +23,6 @@
         </para></listitem>
       </varlistentry>
       <varlistentry>
-        <term>cert9.db, key4.db, pkcs11.txt, *.db</term>
-        <listitem><para>
-          These files constitute the NSS database, which includes
-          private key material, X.509 certificates, CRLs, OCSP
-          responses, and possibly other info.  They will be created
-          and managed automatically by libreswan and should not be
-          world-readable.  See README.nss for more information.
-        </para></listitem>
-      </varlistentry>
-      <varlistentry>
         <term>policies/</term>
         <listitem><para>
           a directory containing policy group configuration
@@ -62,5 +52,9 @@
 When SELinux runs in enforced mode, changing this requires a similar
 change in the SELinux policy for the pluto daemon.
 </para>
+<para>
+  On debian systems, the NSS database itself is not controlled by this
+  value, and is instead located in @FINALNSSDIR@.
+</para>
   </listitem>
   </varlistentry>
diff --git a/programs/ipsec/ipsec_import.8.xml b/programs/ipsec/ipsec_import.8.xml
index 7944a36..f710303 100644
--- a/programs/ipsec/ipsec_import.8.xml
+++ b/programs/ipsec/ipsec_import.8.xml
@@ -27,7 +27,7 @@
 <refsect1 id='description'><title>DESCRIPTION</title>
 <para><emphasis remap='I'>ipsec import</emphasis>
 Import PKCS#12 files into the IPsec NSS database located at the
-ipsec data directory (default: /etc/ipsec.d/)
+ipsec NSS data directory (default: /var/lib/libreswan/nss)
 </para>
 </refsect1>
 
diff --git a/programs/ipsec/ipsec_initnss.8.xml b/programs/ipsec/ipsec_initnss.8.xml
index f88a3d7..1c3b85d 100644
--- a/programs/ipsec/ipsec_initnss.8.xml
+++ b/programs/ipsec/ipsec_initnss.8.xml
@@ -29,7 +29,8 @@
 initialises the NSS database where all private keys for RSA and
 certificate keypairs are stored. If already initialised, it will
 return an error. To remove an existing IPsec NSS database, remove all the
-*.db files and pkcs11.txt from the NSS data directory (default: /etc/ipsec.d/)
+*.db files and pkcs11.txt from the NSS data directory
+(default: /var/lib/libreswan/nss).
 </para>
 </refsect1>
 
diff --git a/programs/look/look.in b/programs/look/look.in
index 77d7c04..231b839 100755
--- a/programs/look/look.in
+++ b/programs/look/look.in
@@ -99,12 +99,12 @@ echo ROUTING TABLES
 ip -4 route
 ip -6 route
 
-if [ -f @IPSEC_CONFDDIR@/cert9.db ]; then
+if [ -f @IPSEC_NSSDIR@/cert9.db ]; then
     echo NSS_CERTIFICATES
     certutil -L -d sql:@IPSEC_NSSDIR@ | head -4
     certutil -L -d sql:@IPSEC_NSSDIR@ | \
 	egrep -v '^NSS_CERTIFICATES|^$|Trust Attributes|MIME,' | LC_ALL=C sort
-elif [ -f @IPSEC_CONFDDIR@/cert8.db ]; then
+elif [ -f @IPSEC_NSSDIR@/cert8.db ]; then
     echo NSS_CERTIFICATES
     certutil -L -d @IPSEC_NSSDIR@ | head -4
     certutil -L -d @IPSEC_NSSDIR@ | \
diff --git a/programs/newhostkey/ipsec_newhostkey.8.xml b/programs/newhostkey/ipsec_newhostkey.8.xml
index 87ac766..1c0f37d 100644
--- a/programs/newhostkey/ipsec_newhostkey.8.xml
+++ b/programs/newhostkey/ipsec_newhostkey.8.xml
@@ -81,9 +81,10 @@
       <varlistentry>
 	<term><option>--configdir</option>&nbsp;<replaceable>nssdbdir</replaceable></term>
 	<listitem>
-	  <para>The <option>--configdir</option> option specifies the NSS
-	  configuration directory where the certificate key, and
-	  modsec databases reside (default <filename>@FINALNSSDIR@</filename>.</para>
+	  <para>The <option>--configdir</option> option specifies the
+	  NSS configuration directory where the certificate key, and
+	  modsec databases reside (default:
+	  <filename>@FINALNSSDIR@</filename>).</para>
 	</listitem>
       </varlistentry>
 
diff --git a/programs/pluto/ipsec_pluto.8.xml b/programs/pluto/ipsec_pluto.8.xml
index 56e937c..30b1f95 100644
--- a/programs/pluto/ipsec_pluto.8.xml
+++ b/programs/pluto/ipsec_pluto.8.xml
@@ -1065,7 +1065,7 @@
 
       <para>Pluto supports X.509 Certificates. All certificate handling is done using
       the NSS library and all certificate material is stored in an NSS database in
-      /etc/ipsec.d or another directory as specified by <option>--ipsecdir</option>.</para>
+      /var/lib/libreswan/nss.  This is not currently overridable.</para>
 
       <para>Pluto may core dump. It will normally do so into the current
       working directory. You can specify the --coredir option for pluto, or
diff --git a/programs/pluto/plutomain.c b/programs/pluto/plutomain.c
index f83648d..8a26e77 100644
--- a/programs/pluto/plutomain.c
+++ b/programs/pluto/plutomain.c
@@ -1691,11 +1691,12 @@ void show_setup_plutomain()
 	whack_log(RC_COMMENT, "config setup options:");	/* spacer */
 	whack_log(RC_COMMENT, " ");	/* spacer */
 	whack_log(RC_COMMENT,
-		"configdir=%s, configfile=%s, secrets=%s, ipsecdir=%s, dumpdir=%s, statsbin=%s",
+		"configdir=%s, configfile=%s, secrets=%s, ipsecdir=%s, nssdir=%s, dumpdir=%s, statsbin=%s",
 		oco->confdir,
 		oco->conffile,
 		oco->secretsfile,
 		oco->confddir,
+		oco->nssdir,
 		coredir,
 		pluto_stats_binary == NULL ? "unset" :  pluto_stats_binary);
 
diff --git a/programs/rsasigkey/ipsec_rsasigkey.8.xml b/programs/rsasigkey/ipsec_rsasigkey.8.xml
index 6e49a76..ec0742a 100644
--- a/programs/rsasigkey/ipsec_rsasigkey.8.xml
+++ b/programs/rsasigkey/ipsec_rsasigkey.8.xml
@@ -72,7 +72,7 @@ prevented when the system is running in FIPS mode.</para>
 
 <para>The <option>--configdir</option> option specifies the nss configuration directory to use.
 This is the directory where the NSS certificate, key and security modules databases reside. The
-default value is <filename>/etc/ipsec.d</filename>.</para>
+default value is <filename>sql:/var/lib/libreswan/nss</filename>.</para>
 
 <para>The <option>--password</option> option specifies the nss cryptographic module authentication
 password if the NSS module has been configured to require it.  A password is required by hardware
@@ -181,8 +181,8 @@ be arbitrarily delayed if the system's entropy pool is low on
 randomness, and  the time taken by the search for primes is also somewhat
 unpredictable. Specifically, embedded systems and most virtual machines are low on
 entropy. In such a situation, consider generating the RSA key on another machine,
-and copying <filename>ipsec.secrets</filename> and the <filename>ipsec.d/*db</filename>
-files to the embedded platform. Note that NSS embeds the full path in the DB files, so
+and copying <filename>ipsec.secrets</filename> and the <filename>/var/lib/libreswan/nss</filename>
+directory tree to the embedded platform. Note that NSS embeds the full path in the DB files, so
 the path on proxy machine must be identical to the path on the destination machine.
 </para>
 </refsect1>
diff --git a/programs/rsasigkey/rsasigkey.c b/programs/rsasigkey/rsasigkey.c
index 2d075ae..365a0ae 100644
--- a/programs/rsasigkey/rsasigkey.c
+++ b/programs/rsasigkey/rsasigkey.c
@@ -201,7 +201,7 @@ int main(int argc, char *argv[])
 			break;
 		case 'c':       /* nss configuration directory */
 		case 'd':       /* -d is used for configdir with nss tools */
-			lsw_conf_confddir(optarg);
+			lsw_conf_nssdb(optarg);
 			break;
 		case 'P':       /* token authentication password */
 			lsw_conf_nsspassword(optarg);
@@ -287,7 +287,7 @@ void rsasigkey(int nbits, int seedbits, const struct lsw_conf_options *oco)
 	realtime_t now = realnow();
 
 	lsw_nss_buf_t err;
-	if (!lsw_nss_setup(oco->confddir, 0, lsw_nss_get_password, err)) {
+	if (!lsw_nss_setup(oco->nssdb, 0, lsw_nss_get_password, err)) {
 		fprintf(stderr, "%s: %s\n", progname, err);
 		exit(1);
 	}
diff --git a/programs/showhostkey/showhostkey.c b/programs/showhostkey/showhostkey.c
index 1341318..de1a9f8 100644
--- a/programs/showhostkey/showhostkey.c
+++ b/programs/showhostkey/showhostkey.c
@@ -453,7 +453,7 @@ int main(int argc, char *argv[])
 	 * processed, and really are "constant".
 	 */
 	const struct lsw_conf_options *oco = lsw_init_options();
-	libreswan_log("using config directory \"%s\"\n", oco->confddir);
+	libreswan_log("using config directory \"%s\"\n", oco->nssdb);
 
 	/*
 	 * Set up for NSS - contains key pairs.
