From: Daniel Kahn Gillmor <dkg@fifthhorseman.net>
Date: Sun, 19 Jun 2016 12:51:39 -0400
Subject: fix variant default NSS dir (documentation and code)

when the default NSS dir varies from upstream defaults, some code
doesn't work properly, and some documentation is wrong.

This fixes the code and the documentation to make them work with the
preferred default FHS-compliant paths for debian.

The most unpleasant code change here is in lib/libswan/lswconf.c,
where --ipsecdir no longer affects the location of the NSS directory.
This has been decoupled from /etc/ipsec.d/policies because we expect
/etc/ipsec.d/policies to be manually controlled by the admin, while we
expect the NSS database to be controlled programmatically by libreswan
(e.g. "ipsec import", "ipsec rsasigkey", "ipsec rsanewhostkey", etc).

The documentation changes, at least, are not applicable upstream
because they hardcode the preferred debian path.  A better fix for
upstream would be to parameterize/substitute the documentation
sources (maybe xml.in would work, i haven't tried it yet)
---
 README.nss                                      | 17 ++++---
 lib/libswan/lswconf.c                           |  1 -
 programs/_import_crl/ipsec__import_crl.8.xml    |  2 +-
 programs/auto/ipsec_auto.8.xml                  |  4 +-
 programs/configs/d.ipsec.conf/implicitconns.xml |  4 +-
 programs/configs/d.ipsec.conf/ipsecdir.xml      | 59 ++++++++++++++++++++++---
 programs/ipsec/ipsec_import.8.xml               |  4 +-
 programs/ipsec/ipsec_initnss.8.xml              |  3 +-
 programs/look/look.in                           |  4 +-
 programs/newhostkey/ipsec_newhostkey.8.xml      |  9 ++--
 programs/pluto/ipsec_pluto.8.xml                |  2 +-
 programs/pluto/plutomain.c                      |  3 +-
 programs/rsasigkey/ipsec_rsasigkey.8.xml        |  6 +--
 programs/rsasigkey/rsasigkey.c                  |  6 ++-
 programs/showhostkey/showhostkey.c              |  4 +-
 15 files changed, 91 insertions(+), 37 deletions(-)

diff --git a/README.nss b/README.nss
index d1cef45..d018eec 100644
--- a/README.nss
+++ b/README.nss
@@ -62,7 +62,7 @@ using:
 
 	ipsec initnss
 
-By default the NSS db is created in /etc/ipsec.d/
+By default the NSS db is created in /var/lib/libreswan/nss
 
 When creating a database, you are prompted for a password. The default
 libreswan package install for RHEL/Fedora/CentOS uses an empty password.
@@ -72,7 +72,7 @@ running in FIPS mode.
 
 To change the empty password, run:
 
-	certutil -W -d sql:/etc/ipsec.d
+	certutil -W -d sql:/var/lib/libreswan/nss
 
 Enter return for the "old password", then enter your new password.
 
@@ -110,8 +110,7 @@ The "ipsec newhostkey" and "ipsec rsasigkey" utilities are used for
 creating raw RSA keys. If a non-default NSS directory is used, this can
 be specified using the -d option.
 
-	ipsec newhostkey --configdir /etc/ipsec.d [--password password] \
-		--output /etc/ipsec.secrets
+	ipsec newhostkey [--password password]
 
 The password is only required if the NSS database is protected with a
 non-empty password.  All "private" compontents of the raw RSA key in
@@ -139,7 +138,7 @@ Below, we will be using the nss tools to generate certificates
 * To create a certificate authority (CA certficate):
 
 	certutil -S -k rsa -n "ExampleCA" -s "CN=Example CA Inc" -w 12 \
-		-t "CT,," -x -d sql:/etc/ipsec.d
+		-t "CT,," -x -d sql:/var/lib/libreswan/nss
 
 It creates a certificate with RSA keys (-k rsa) with the nick name
 "ExampleCA", and with common name "Example CA Inc". The option
@@ -154,7 +153,7 @@ certificate can be obtained from anywhere in the world.
 * To create a user certificate signed by the above CA
 
 	certutil -S -k rsa -c "ExampleCA" -n "user1" -s "CN=User Common Name" \
-		-w 12 -t "u,u,u" -d sql:/etc/ipsec.d
+		-w 12 -t "u,u,u" -d sql:/var/lib/libreswan/nss
 
 It creates a user cert with nick name "user1" with attributes
 "u,u,u" signed by the CA cert "ExampleCA".
@@ -210,7 +209,7 @@ Now you can import the file into the NSS db:
 
 	ipsec import certkey.p12
 
-NOTE: the ipsec command uses "pk12util -i certkey.p12 -d /etc/ipsec.d"
+NOTE: the ipsec command uses "pk12util -i certkey.p12 -d /var/lib/libreswan/nss"
 
 If you did not pick a name using the -name option, you can use
 certutil -L -d /etc/ipsec.d to figure out the name NSS picked durnig
@@ -234,12 +233,12 @@ Paul: add "ipsec export" ?
 
 To export the CA certificate:
 
-	NSS_DEFAULT_DB_TYPE="sql:" pk12util -o cacert1.p12 -n cacert1 -d /etc/ipsec.d
+	NSS_DEFAULT_DB_TYPE="sql:" pk12util -o cacert1.p12 -n cacert1 -d /var/lib/libreswan/nss
 
 Copy the file "cacert1.p12" to the new machine and import it using:
 
 	ipsec import cacert1.p12
-	certutil -M -n cacert1 -t "CT,," -d sql:/etc/ipsec.d
+	certutil -M -n cacert1 -t "CT,," -d sql:/var/lib/libreswan/nss
 
 Example connection for ipsec.conf:
 
diff --git a/lib/libswan/lswconf.c b/lib/libswan/lswconf.c
index 1adf099..acdeda9 100644
--- a/lib/libswan/lswconf.c
+++ b/lib/libswan/lswconf.c
@@ -124,7 +124,6 @@ void lsw_init_ipsecdir(const char *ipsec_dir)
 	if (!setup)
 		lsw_conf_setdefault();
 	global_oco.confddir = clone_str(ipsec_dir, "override ipsec.d");
-	global_oco.nssdir = clone_str(ipsec_dir, "override nssdir");
 	lsw_conf_calculate(&global_oco);
 	setup = TRUE;
 
diff --git a/programs/_import_crl/ipsec__import_crl.8.xml b/programs/_import_crl/ipsec__import_crl.8.xml
index 6b250db..8e9e0a9 100644
--- a/programs/_import_crl/ipsec__import_crl.8.xml
+++ b/programs/_import_crl/ipsec__import_crl.8.xml
@@ -23,7 +23,7 @@
 <para><emphasis remap='I'>_import_crl</emphasis>
 is spawned by
 <emphasis remap='B'>pluto</emphasis>
-in order to add or update a CRL in the NSS database (default: /etc/ipsec.d)</para>
+in order to add or update a CRL in the NSS database (default: /var/lib/libreswan/nss)</para>
 </refsect1>
 
 <refsect1 id='see_also'><title>SEE ALSO</title>
diff --git a/programs/auto/ipsec_auto.8.xml b/programs/auto/ipsec_auto.8.xml
index fb38f1e..0b2d8da 100644
--- a/programs/auto/ipsec_auto.8.xml
+++ b/programs/auto/ipsec_auto.8.xml
@@ -252,7 +252,7 @@ but that may change.)</para>
 </para>
 <para>      The  <option>--listcerts</option>  operation  lists  all  X.509 certificates
        loaded  locally  using  the  rightcert  and  leftcert   parameters   in
-       ipsec.conf(5). To see all certificates in the NSS database, use <option>certutil -d /etc/ipsec.d -L</option>.
+       ipsec.conf(5). To see all certificates in the NSS database, use <option>certutil -d /var/lib/libreswan/nss -L</option>.
 </para>
 <para>      The  <option>--checkpubkeys</option>  operation  lists  all loaded X.509 certificates
        which are about to expire or have been expired.
@@ -317,7 +317,7 @@ for details of the configuration file.
 <para>
 <literallayout remap='.nf'>
 /etc/ipsec.conf			default IPSEC configuration file
-/etc/ipsec.d/			X.509 and Opportunistic Encryption files
+/var/lib/libreswan/nss		X.509 and Opportunistic Encryption files
 /var/run/pluto/pluto.ctl	Pluto command socket
 </literallayout>
 </para>
diff --git a/programs/configs/d.ipsec.conf/implicitconns.xml b/programs/configs/d.ipsec.conf/implicitconns.xml
index ae349cb..bc36ab9 100644
--- a/programs/configs/d.ipsec.conf/implicitconns.xml
+++ b/programs/configs/d.ipsec.conf/implicitconns.xml
@@ -89,7 +89,7 @@ appropriate and reasonable to use <emphasis remap='B'>also=private-or-clear</emp
 
 <refsect1 id='policy_group_files'><title>POLICY GROUP FILES</title>
 <para>The optional files under
-<filename>/etc/ipsec.d/policy</filename>,
+<filename>/etc/ipsec.d/policies</filename>,
 including</para>
 <literallayout remap='.nf'>
 
@@ -130,7 +130,7 @@ resulting instances as normal connections.</para>
 <para>For example, given a suitable connection definition
 <emphasis remap='B'>private</emphasis>,
 and the file
-<filename>/etc/ipsec.d/policy/private</filename>
+<filename>/etc/ipsec.d/policies/private</filename>
 with an entry 192.0.2.3,
 the system creates a connection instance
 <emphasis remap='B'>private#192.0.2.3.</emphasis>
diff --git a/programs/configs/d.ipsec.conf/ipsecdir.xml b/programs/configs/d.ipsec.conf/ipsecdir.xml
index d90ac88..658f3d5 100644
--- a/programs/configs/d.ipsec.conf/ipsecdir.xml
+++ b/programs/configs/d.ipsec.conf/ipsecdir.xml
@@ -1,11 +1,60 @@
   <varlistentry>
   <term><emphasis remap='B'>ipsecdir</emphasis></term>
   <listitem>
-<para>in what directory the X509, NSS and OE related files should be stored.
-The default value is <emphasis remap='I'>/etc/ipsec.d</emphasis>. When SELinux
-runs in enforced mode, changing this requires a similar change in the SELinux policy
-for the pluto daemon. Note that NSS generated db files contain their location within
-their files, so you cannot move this directory without re-creating the NSS files.
+    <para>Specifies a directory for administrator-controlled
+    configuration files and directories.  The default value is
+    <emphasis remap='I'>/etc/ipsec.d</emphasis>.  It may contain
+    the following files and directories:</para>
+    <variablelist remap='IP'>
+      <varlistentry>
+        <term>passwd</term>
+        <listitem><para>
+          (optional) for XAUTH support if not using PAM (this file
+          should not be world-readable). See README.XAUTH for more
+          information.
+        </para></listitem>
+      </varlistentry>
+      <varlistentry>
+        <term>nsspassword</term>
+        <listitem><para>
+          (optional) passwords needed to unlock the NSS database
+          in /var/lib/libreswan/nss (this file should not be
+          world-readable).  See README.nss for more information.
+        </para></listitem>
+      </varlistentry>
+      <varlistentry>
+        <term>policies/</term>
+        <listitem><para>
+          a directory containing policy group configuration
+          information.  See <emphasis remap='B'>POLICY GROUP
+          FILES</emphasis> in this document for more information.
+        </para></listitem>
+      </varlistentry>
+      <varlistentry>
+        <term>cacerts/</term>
+        <listitem><para>
+          DEPRECATED: a directory to store trust anchors (root
+          certificate authority certificates).  The preferred (and
+          default) approach is to store CA certs in the NSS database
+          instead.  See README.nss for more information.
+        </para></listitem>
+      </varlistentry>
+      <varlistentry>
+        <term>crls/</term>
+        <listitem><para>
+          DEPRECATED: a directory to store certificate revocation
+          lists. The preferred (and default) approach is to store CRLs
+          in the NSS database instead. See README.nss for more information. 
+        </para></listitem>
+      </varlistentry>
+    </variablelist>
+    <para>
+When SELinux runs in enforced mode, changing this requires a similar
+change in the SELinux policy for the pluto daemon.
+</para>
+<para>
+  On debian systems, the NSS database itself is not controlled by this
+  value, and is instead located in /var/lib/libreswan/nss.
 </para>
   </listitem>
   </varlistentry>
diff --git a/programs/ipsec/ipsec_import.8.xml b/programs/ipsec/ipsec_import.8.xml
index 5204416..f710303 100644
--- a/programs/ipsec/ipsec_import.8.xml
+++ b/programs/ipsec/ipsec_import.8.xml
@@ -27,7 +27,7 @@
 <refsect1 id='description'><title>DESCRIPTION</title>
 <para><emphasis remap='I'>ipsec import</emphasis>
 Import PKCS#12 files into the IPsec NSS database located at the
-ipsec data directory (default: /etc/ipsec.d/)
+ipsec NSS data directory (default: /var/lib/libreswan/nss)
 </para>
 </refsect1>
 
@@ -37,7 +37,7 @@ ipsec data directory (default: /etc/ipsec.d/)
 
 
 <refsect1 id='bugs'><title>BUGS</title>
-<para>This still needs an option for using an ipsec.d directory at a no-default location</para>
+<para>This still needs an option for using an NSS directory at a non-default location</para>
 </refsect1>
 </refentry>
 
diff --git a/programs/ipsec/ipsec_initnss.8.xml b/programs/ipsec/ipsec_initnss.8.xml
index 292e923..81afc3a 100644
--- a/programs/ipsec/ipsec_initnss.8.xml
+++ b/programs/ipsec/ipsec_initnss.8.xml
@@ -29,7 +29,8 @@
 initialises the NSS database where all private keys for RSA and
 certificate keypairs are stored. If already initialised, it will
 return an error. To remove an existing IPsec NSS database, remove all the
-*.db files from the ipsec data directory (default: /etc/ipsec.d/)
+*.db files and pkcs11.txt from the ipsec data directory
+(default: /var/lib/libreswan/nss).
 </para>
 </refsect1>
 
diff --git a/programs/look/look.in b/programs/look/look.in
index 77d7c04..231b839 100755
--- a/programs/look/look.in
+++ b/programs/look/look.in
@@ -99,12 +99,12 @@ echo ROUTING TABLES
 ip -4 route
 ip -6 route
 
-if [ -f @IPSEC_CONFDDIR@/cert9.db ]; then
+if [ -f @IPSEC_NSSDIR@/cert9.db ]; then
     echo NSS_CERTIFICATES
     certutil -L -d sql:@IPSEC_NSSDIR@ | head -4
     certutil -L -d sql:@IPSEC_NSSDIR@ | \
 	egrep -v '^NSS_CERTIFICATES|^$|Trust Attributes|MIME,' | LC_ALL=C sort
-elif [ -f @IPSEC_CONFDDIR@/cert8.db ]; then
+elif [ -f @IPSEC_NSSDIR@/cert8.db ]; then
     echo NSS_CERTIFICATES
     certutil -L -d @IPSEC_NSSDIR@ | head -4
     certutil -L -d @IPSEC_NSSDIR@ | \
diff --git a/programs/newhostkey/ipsec_newhostkey.8.xml b/programs/newhostkey/ipsec_newhostkey.8.xml
index 9326cef..df3dbbb 100644
--- a/programs/newhostkey/ipsec_newhostkey.8.xml
+++ b/programs/newhostkey/ipsec_newhostkey.8.xml
@@ -57,10 +57,11 @@ and the output is appended to the file.</para>
 <emphasis remap='I'>rsasigkey</emphasis> narrative and the
 existing-file warning message.</para>
 
-<para> When compiled with NSS support (the default), <option>--configdir</option>
-specifies the nss configuration directory where the certificate key, and
-modsec databases reside. There is no default value, though /etc/ipsec.d
-might be sensible choice.</para>
+<para> When compiled with NSS support (the default),
+<option>--configdir</option> specifies the nss configuration directory
+where the certificate key, and modsec databases reside.  The default
+is <emphasis remap='I'>/var/lib/libreswan/nss</emphasis>.</para>
+
 <para> When compiled with NSS support (the default), <option>--password</option>
 specifies a module authentication password that may be required if FIPS
 mode is enabled </para>
diff --git a/programs/pluto/ipsec_pluto.8.xml b/programs/pluto/ipsec_pluto.8.xml
index a91b384..ede9112 100644
--- a/programs/pluto/ipsec_pluto.8.xml
+++ b/programs/pluto/ipsec_pluto.8.xml
@@ -1064,7 +1064,7 @@
 
       <para>Pluto supports X.509 Certificates. All certificate handling is done using
       the NSS library and all certificate material is stored in an NSS database in
-      /etc/ipsec.d or another directory as specified by <option>--ipsecdir</option>.</para>
+      /var/lib/libreswan/nss.  This is not currently overridable.</para>
 
       <para>Pluto may core dump. It will normally do so into the current
       working directory. You can specify the --coredir option for pluto, or
diff --git a/programs/pluto/plutomain.c b/programs/pluto/plutomain.c
index 3317a7d..b56807c 100644
--- a/programs/pluto/plutomain.c
+++ b/programs/pluto/plutomain.c
@@ -1711,11 +1711,12 @@ void show_setup_plutomain()
 	whack_log(RC_COMMENT, "config setup options:");	/* spacer */
 	whack_log(RC_COMMENT, " ");	/* spacer */
 	whack_log(RC_COMMENT,
-		"configdir=%s, configfile=%s, secrets=%s, ipsecdir=%s, dumpdir=%s, statsbin=%s",
+		"configdir=%s, configfile=%s, secrets=%s, ipsecdir=%s, nssdir=%s, dumpdir=%s, statsbin=%s",
 		oco->confdir,
 		oco->conffile,
 		pluto_shared_secrets_file,
 		oco->confddir,
+		oco->nssdir,
 		coredir,
 		pluto_stats_binary == NULL ? "unset" :  pluto_stats_binary);
 
diff --git a/programs/rsasigkey/ipsec_rsasigkey.8.xml b/programs/rsasigkey/ipsec_rsasigkey.8.xml
index a5cf6d0..d8d0e4d 100644
--- a/programs/rsasigkey/ipsec_rsasigkey.8.xml
+++ b/programs/rsasigkey/ipsec_rsasigkey.8.xml
@@ -72,7 +72,7 @@ prevented when the system is running in FIPS mode.</para>
 
 <para>The <option>--configdir</option> option specifies the nss configuration directory to use.
 This is the directory where the NSS certificate, key and security modules databases reside. The
-default value is <filename>/etc/ipsec.d</filename>.</para>
+default value is <filename>sql:/var/lib/libreswan/nss</filename>.</para>
 
 <para>The <option>--password</option> option specifies the nss cryptographic module authentication
 password if the NSS module has been configured to require it.  A password is required by hardware
@@ -187,8 +187,8 @@ be arbitrarily delayed if the system's entropy pool is low on
 randomness, and  the time taken by the search for primes is also somewhat
 unpredictable. Specifically, embedded systems and most virtual machines are low on
 entropy. In such a situation, consider generating the RSA key on another machine,
-and copying <filename>ipsec.secrets</filename> and the <filename>ipsec.d/*db</filename>
-files to the embedded platform. Note that NSS embeds the full path in the DB files, so
+and copying <filename>ipsec.secrets</filename> and the <filename>/var/lib/libreswan/nss</filename>
+directory tree to the embedded platform. Note that NSS embeds the full path in the DB files, so
 the path on proxy machine must be identical to the path on the destination machine.
 </para>
 </refsect1>
diff --git a/programs/rsasigkey/rsasigkey.c b/programs/rsasigkey/rsasigkey.c
index 33f9b3e..985f73f 100644
--- a/programs/rsasigkey/rsasigkey.c
+++ b/programs/rsasigkey/rsasigkey.c
@@ -74,7 +74,11 @@
 #define E       3               /* standard public exponent */
 /* #define F4	65537 */	/* possible future public exponent, Fermat's 4th number */
 
+#ifdef IPSEC_NSSDIR
+#define NSSDIR "sql:" IPSEC_NSSDIR
+#else
 #define NSSDIR "sql:/etc/ipsec.d"
+#endif
 
 char *progname;
 char usage[] =
@@ -316,7 +320,7 @@ int main(int argc, char *argv[])
 			}
 			break;
 		case 'h':       /* help */
-			printf("Usage:\t%s\n", usage);
+			printf("Usage:\t%s\n\n  --configdir defaults to " NSSDIR "\n", usage);
 			exit(0);
 			break;
 		case 'V':       /* version */
diff --git a/programs/showhostkey/showhostkey.c b/programs/showhostkey/showhostkey.c
index 23c0e46..218e97b 100644
--- a/programs/showhostkey/showhostkey.c
+++ b/programs/showhostkey/showhostkey.c
@@ -442,11 +442,11 @@ usage:
 
 	if (verbose)
 		fprintf(stderr, "ipsec showhostkey using nss directory: %s\n",
-			oco->confddir);
+			oco->nssdir);
 	PR_Init(PR_USER_THREAD, PR_PRIORITY_NORMAL, 1);
 
 	{
-		SECStatus rv = NSS_InitReadWrite(oco->confddir);
+		SECStatus rv = NSS_InitReadWrite(oco->nssdir);
 
 		if (rv != SECSuccess) {
 			fprintf(stderr, "%s: NSS_InitReadWrite returned %d\n",
