#!/bin/sh

SRCDIR=$1
OBJDIR=$2
dirs=$3

if [ "${OBJDIR}/Makefile" = "${SRCDIR}/Makefile" ]
then
	echo "failed. ${OBJDIR} == ${SRCDIR}"
	exit 1
fi

mkdir -p ${OBJDIR}
OBJDIRTOP=`(cd ${OBJDIR};pwd)`

if [ -f "${OBJDIRTOP}/Makefile" ]
then
    : echo "Will not overwrite ${OBJDIRTOP}/Makefile"
else
	echo 'SRCDIR='${SRCDIR}/ 		 >${OBJDIRTOP}/Makefile
	echo 'OBJDIR='${OBJDIR}                 >>${OBJDIRTOP}/Makefile
	echo 'OBJDIRTOP='${OBJDIRTOP}           >>${OBJDIRTOP}/Makefile
	echo 'VPATH+=${SRCDIR}' 		>>${OBJDIRTOP}/Makefile
	echo 'OSDEP='${OSDEP}                   >>${OBJDIRTOP}/Makefile
	echo 'BUILDENV='${BUILDENV}             >>${OBJDIRTOP}/Makefile
	echo 'LIBRESWANSRCDIR='${SRCDIR}         >>${OBJDIRTOP}/Makefile
	echo 'include ${SRCDIR}Makefile.top'   >>${OBJDIRTOP}/Makefile

	echo 'programs config man install clean checkprograms:: ' >>${OBJDIRTOP}/Makefile
	echo '	@for d in $(SUBDIRS) ; \'                                >>${OBJDIRTOP}/Makefile
	echo '	do \'                                                    >>${OBJDIRTOP}/Makefile
	echo '		(cd $$d && $(MAKE) LIBRESWANSRCDIR=${LIBRESWANSRCDIR} $@ ) || exit 1; \'  >>${OBJDIRTOP}/Makefile
	echo '	done; '                                                  >>${OBJDIRTOP}/Makefile
fi


find $dirs -name Makefile -print | (cd ${OBJDIR}; while read file
do
	dirname=`dirname $file`
	dsrcdir=${SRCDIR}/${dirname}
	mkdir -p $dirname

	if [ -f ${dirname}/Makefile ]
	then
	    : echo "Will not overwrite ${dirname}/Makefile"
	else
		echo 'SRCDIR='${dsrcdir}/ 		 >${dirname}/Makefile
		echo 'OBJDIR='${OBJDIR}                 >>${dirname}/Makefile
		echo 'OBJDIRTOP='${OBJDIRTOP}           >>${dirname}/Makefile
		echo 'OSDEP='${OSDEP}                   >>${dirname}/Makefile
		echo 'BUILDENV='${BUILDENV}             >>${dirname}/Makefile
		echo 'VPATH+=${SRCDIR}' 		>>${dirname}/Makefile
		echo 'LIBRESWANSRCDIR='${SRCDIR}        >>${dirname}/Makefile
		echo 'include ${SRCDIR}Makefile'        >>${dirname}/Makefile
		echo '-include Makefile.depend'         >>${dirname}/Makefile
	fi
done
)




