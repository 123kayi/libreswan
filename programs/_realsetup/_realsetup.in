#!/bin/sh
# IPsec startup and shutdown command
# Copyright (C) 1998, 1999, 2001  Henry Spencer.
# Copyright (C) 2012 Paul Wouters <paul@libreswan.org>
# 
# This program is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by the
# Free Software Foundation; either version 2 of the License, or (at your
# option) any later version.  See <http://www.fsf.org/copyleft/gpl.txt>.
# 
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
# or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
# for more details.
#
# This is the version for use on Linux, see _realsetup.bsd for OSX/BSD

# Misc. paths (some of this should perhaps be overrideable from ipsec.conf).
rundir=/var/run/pluto
plutopid=$rundir/pluto.pid
plutoctl=$rundir/pluto.ctl
ipsecversion=/proc/net/ipsec_version
kamepfkey=/proc/net/pfkey

#pluto searches the current directory, so this is required for making it selinux compliant
cd /

#/etc/resolv.conf related paths
LIBRESWAN_RESOLV_CONF=/var/run/pluto/libreswan-resolv-conf-backup
ORIG_RESOLV_CONF=/etc/resolv.conf


if test `ip addr list|grep -c cipsec` -ne 0
then
	echo "Cisco IPSec client is already loaded, aborting! (cipsec# device found)"
	exit 1
fi

# which kernel are we using?
IPSECprotostack=`ipsec addconn --liststack`

# do it
case "$1" in
  start|--start|_autostart)
	# (Warning, changes to this log message may affect barf.)
	version="`ipsec --version | awk 'NR == 1 { print $(3) }' | sed -e 's/^U\(.*\)\/K(.*/\1/'`"
	case "$1" in
	start|--start)	echo "Starting Libreswan IPsec $version..."	;;
	_autostart)	echo "Restarting Libreswan IPsec $version..."	;;
	esac

	# preliminaries
	mkdir -p $rundir
	chmod 700 $rundir > /dev/null 2>/dev/null

	# in case we are switching stacks, remove the old one 
	case $IPSECprotostack in
	netkey) 
		if [ -f $ipsecversion ]
		then
	   		ipsec _startklips stop
		fi
		;;
	none|nostack)   ;;
	klips) 
		if [ -f $kamepfkey ]
		then
	   		ipsec _startnetkey stop
		fi
		;;
	mast)
		if [ -f $kamepfkey ]
		then
	   		ipsec _startnetkey stop
		fi
		;;
	*)
		echo "unexpected stack $IPSECprotostack"
		;;
	esac

	if [ "$IPSECprotostack" = "netkey" ]
	then
		ipsec _startnetkey start
	fi

	if [ "$IPSECprotostack" = "klips" -o "$IPSECprotostack" = "mast" ]
	then
		ipsec _startklips start
	fi

	# Finally start the pluto daemon in a restart loop
	ipsec _plutorun &
	# done!
	echo "...Libreswan IPsec started"
	;;

  stop|--stop|_autostop)		# _autostop is same as stop
	# Shut things down.
	echo "Stopping Libreswan IPsec..."
	[ -f $plutoctl ] && ipsec whack --shutdown
	RETVAL=$?
	rm -f $plutoctl
	if [ $RETVAL -ne 0 ]
	then
		sleep 1; 
		if [ -s $plutopid ]
		then
			echo "Attempt to shut Pluto down failed!  Trying kill"
			if [ -d /proc/$plutopid ]
			then
				kill `cat $plutopid` 
				RETVAL=$?
				sleep 5;
				if [ $RETVAL -ne 0 ]
				then
				echo "Kill failed - removing orphaned $plutopid"
				fi
			else
				echo "Removing orphaned $plutopid"
			fi
			rm -f $plutopid
		fi
	fi
	# we could have pluto's with --nofork running, with no active pid
	plutos=`pidof pluto`
	for pluto in $plutos; do kill $pluto; done

	if [ -f $kamepfkey ]
	then
	   	ipsec _startnetkey stop
	fi
	if [ -f $ipsecversion ]
	then
	   	ipsec _startklips stop
	fi

	#cleaning up backup resolv.conf
	if [ -e $LIBRESWAN_RESOLV_CONF ]
	then
		if grep 'Libreswan' $ORIG_RESOLV_CONF > /dev/null 2>&1
		then
			cp $LIBRESWAN_RESOLV_CONF $ORIG_RESOLV_CONF
		else
			echo "Current resolv.conf is not generated by Libreswan, so doing nothing"
		fi
		rm -f  $LIBRESWAN_RESOLV_CONF
	fi

	exit 
	;;

  --status)
	;;

  *)
	echo "Usage: {--start|--stop|--restart|--status}" >&2
	exit 2
esac

exit 0
