#!/bin/sh
# IPsec startup and shutdown command
# Copyright (C) 1998, 1999, 2001  Henry Spencer.
# Copyright (C) 2012 Paul Wouters <paul@libreswan.org>
# 
# This program is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by the
# Free Software Foundation; either version 2 of the License, or (at your
# option) any later version.  See <http://www.fsf.org/copyleft/gpl.txt>.
# 
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
# or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
# for more details.
#
# This is the version for use on Linux, see _realsetup.bsd for OSX/BSD

# Misc. paths (some of this should perhaps be overrideable from ipsec.conf).
rundir=/var/run/pluto
plutopid=$rundir/pluto.pid
plutoctl=$rundir/pluto.ctl
ipsecversion=/proc/net/ipsec_version
kamepfkey=/proc/net/pfkey

#pluto searches the current directory, so this is required for making it selinux compliant
cd /

#/etc/resolv.conf related paths
LIBRESWAN_RESOLV_CONF=/var/run/pluto/libreswan-resolv-conf-backup
ORIG_RESOLV_CONF=/etc/resolv.conf


if test `ip addr list|grep -c cipsec` -ne 0
then
	echo "Cisco IPSec client is already loaded, aborting! (cipsec# device found)"
	exit 1
fi

# which kernel are we using?
IPSECprotostack=`ipsec addconn --liststack`

systemd="`pidof systemd`"
if test "$systemd" = "1";
then
	initsystem="systemd"
else
	# upstart support not yet added
	initsystem="sysv"
fi

case "$1" in
  start|--start|_autostart)

	# preliminaries
	mkdir -p $rundir
	chmod 700 $rundir > /dev/null 2>/dev/null

	# starting a stack will unload any loaded stack first (same or different stack)
	ipsec _stackmanager start

	# Finally start the pluto daemon in a restart loop
	if test $initsystem = "systemd";
	then
		systemctl status ipsec.service > /dev/null
		RETVAL=$?
		if test $RETVAL -eq 0;
		then
			echo "systemd: ipsec service is already running"
			exit 1
		else
			echo "Redirecting to: systemctl start ipsec.service"
			exec systemctl start ipsec.service
		fi
	elif test $initsystem = "sysv";
	then
		echo "Redirecting to: service ipsec start"
		exec service ipsec start
	elif test $initsystem = "upstart";
	then
		echo "Redirecting to: upstart not yet implementd "
		exit 2
	else
		echo "Unknown init system in use - aborted"
		exit 3
	fi
	exit 
	;;

  stop|--stop|_autostop)		# _autostop is same as stop
	# Shut things down.
	if test $initsystem = "systemd";
	then
		echo "Redirecting to: systemctl stop ipsec.service"
		# don't exec, we need to cleanup the IPsec stack afterwards
		systemctl stop ipsec.service
	elif test $initsystem = "sysv";
	then
		echo "Redirecting to: service ipsec stop"
		# don't exec, we need to cleanup the IPsec stack afterwards
		service ipsec stop
	elif test $initsystem = "upstart";
	then
		echo "Redirecting to: upstart not yet implemented"
		exit 2
	else
		echo "Unknown init system in use - aborted"
		exit 3
	fi
		
	# Remove any loaded IPsec stack
	ipsec _stackmanager stop

	# Cleaning up backup resolv.conf
	if [ -e $LIBRESWAN_RESOLV_CONF ]
	then
		if grep 'Libreswan' $ORIG_RESOLV_CONF > /dev/null 2>&1
		then
			cp $LIBRESWAN_RESOLV_CONF $ORIG_RESOLV_CONF
		else
			echo "Current resolv.conf is not generated by Libreswan, so doing nothing"
		fi
		rm -f  $LIBRESWAN_RESOLV_CONF
	fi

	exit 
	;;

  status|--status)
	if test $initsystem = "systemd";
	then
		echo "Redirecting to: systemctl status ipsec.service"
		exec systemctl status ipsec.service
	elif test $initsystem = "sysv";
	then
		echo "Redirecting to: service ipsec status"
		exec service ipsec status
	elif test $initsystem = "upstart";
	then
		echo "Redirecting to: upstart not yet implementd "
		exit 2
	else
		echo "Unknown init system in use - aborted"
		exit 3
	fi
	exit 
	;;

  restart|--restart)
	# assumes preparations for running have already been done, as service should be running now
	if test $initsystem = "systemd";
	then
		systemctl status ipsec.service > /dev/null
		RETVAL=$?
		if test $RETVAL -ne 0;
		then
			echo "systemd: ipsec service is not running"
			exit 1
		else
			echo "Redirecting to: systemctl restart ipsec.service"
			exec systemctl restart ipsec.service
		fi
	elif test $initsystem = "sysv";
	then
		echo "Redirecting to: service ipsec restart"
		exec service ipsec restart
	elif test $initsystem = "upstart";
	then
		echo "Redirecting to: upstart not yet implementd "
		exit 2
	else
		echo "Unknown init system in use - aborted"
		exit 3
	fi
	exit 
	;;

  *)
	echo "Usage: {--start|--stop|--restart|--status}" >&2
	exit 2
esac

exit 0
