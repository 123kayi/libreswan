<refsect1 id='description'><title>DESCRIPTION</title>
<para>The optional
<emphasis remap='I'>ipsec.conf</emphasis>
file
specifies most configuration and control information for the
Openswan IPsec subsystem.
(The major exception is secrets for authentication;
see
<citerefentry><refentrytitle>ipsec.secrets</refentrytitle><manvolnum>5</manvolnum></citerefentry>.)
Its contents are not security-sensitive
<emphasis remap='I'>unless</emphasis>
manual keying is being done for more than just testing,
in which case the encryption/authentication keys in the
descriptions for the manually-keyed connections are very sensitive
(and those connection descriptions
are probably best kept in a separate file,
via the include facility described below).</para>

<para>The file is a text file, consisting of one or more
<emphasis remap='I'>sections</emphasis>.
White space followed by
<emphasis remap='B'>#</emphasis>
followed by anything to the end of the line
is a comment and is ignored,
as are empty lines which are not within a section.</para>

<para>A line which contains
<emphasis remap='B'>include</emphasis>
and a file name, separated by white space,
is replaced by the contents of that file,
preceded and followed by empty lines.
If the file name is not a full pathname,
it is considered to be relative to the directory containing the
including file.
Such inclusions can be nested.
Only a single filename may be supplied, and it may not contain white space,
but it may include shell wildcards (see
<citerefentry><refentrytitle>sh</refentrytitle><manvolnum>1</manvolnum></citerefentry>);
for example:</para>

<para><emphasis remap='B'>include</emphasis>
<emphasis remap='B'>ipsec.*.conf</emphasis></para>

<para>The intention of the include facility is mostly to permit keeping
information on connections, or sets of connections,
separate from the main configuration file.
This permits such connection descriptions to be changed,
copied to the other security gateways involved, etc.,
without having to constantly extract them from the configuration
file and then insert them back into it.
Note also the
<emphasis remap='B'>also</emphasis>
and
<emphasis remap='B'>alsoflip</emphasis>
parameters (described below) which permit splitting a single logical section
(e.g. a connection description) into several actual sections.</para>

<para>The first significant line of the file must specify the version
of this specification that it conforms to:</para>

<para><emphasis remap='B'>version 2</emphasis></para>

<para>A section
begins with a line of the form:</para>

<para><emphasis remap='I'>type</emphasis>
<emphasis remap='I'>name</emphasis></para>

<para>where
<emphasis remap='I'>type</emphasis>
indicates what type of section follows, and
<emphasis remap='I'>name</emphasis>
is an arbitrary name which distinguishes the section from others
of the same type.
(Names must start with a letter and may contain only
letters, digits, periods, underscores, and hyphens.)
All subsequent non-empty lines
which begin with white space are part of the section;
comments within a section must begin with white space too.
There may be only one section of a given type with a given name.</para>

<para>Lines within the section are generally of the form</para>

<para>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<emphasis remap='I'>parameter</emphasis><emphasis remap='B'>=</emphasis><emphasis remap='I'>value</emphasis></para>

<para>(note the mandatory preceding white space).
There can be white space on either side of the
<emphasis remap='B'>=</emphasis>.
Parameter names follow the same syntax as section names,
and are specific to a section type.
Unless otherwise explicitly specified,
no parameter name may appear more than once in a section.</para>

<para>An empty
<emphasis remap='I'>value</emphasis>
stands for the system default value (if any) of the parameter,
i.e. it is roughly equivalent to omitting the parameter line entirely.
A
<emphasis remap='I'>value</emphasis>
may contain white space only if the entire
<emphasis remap='I'>value</emphasis>
is enclosed in double quotes (<emphasis remap='B'>"</emphasis>);
a
<emphasis remap='I'>value</emphasis>
cannot itself contain a double quote,
nor may it be continued across more than one line.</para>

<para>Numeric values are specified to be either an &ldquo;integer&rdquo;
(a sequence of digits) or a &ldquo;decimal number&rdquo;
(sequence of digits optionally followed by `.' and another sequence of digits).</para>

<para>There is currently one parameter which is available in any type of
section:</para>
<variablelist remap='TP'>
  <varlistentry>
  <term><emphasis remap='B'>also</emphasis></term>
  <listitem>
<para>the value is a section name;
the parameters of that section are appended to this section,
as if they had been written as part of it.
The specified section must exist, must follow the current one,
and must have the same section type.
(Nesting is permitted,
and there may be more than one
<emphasis remap='B'>also</emphasis>
in a single section,
although it is forbidden to append the same section more than once.)
This allows, for example, keeping the encryption keys
for a connection in a separate file
from the rest of the description, by using both an
<emphasis remap='B'>also</emphasis>
parameter and an
<emphasis remap='B'>include</emphasis>
line.
(Caution, see BUGS below for some restrictions.)</para>
  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>alsoflip</emphasis></term>
  <listitem>
<para>can be used in a
<emphasis remap='B'>conn</emphasis>
section.
It acts like an
<emphasis remap='B'>also</emphasis>
that flips the referenced section's entries left-for-right.</para>
  </listitem>
  </varlistentry>
</variablelist>

<para>Parameter names beginning with
<emphasis remap='B'>x-</emphasis>
(or
<emphasis remap='B'>X-</emphasis>,
or
<emphasis remap='B'>x_</emphasis>,
or
<emphasis remap='B'>X_</emphasis>)
are reserved for user extensions and will never be assigned meanings
by IPsec.
Parameters with such names must still observe the syntax rules
(limits on characters used in the name;
no white space in a non-quoted value;
no newlines or double quotes within the value).
All other as-yet-unused parameter names are reserved for future IPsec
improvements.</para>

<para>A section with name
<emphasis remap='B'>%default</emphasis>
specifies defaults for sections of the same type.
For each parameter in it,
any section of that type which does not have a parameter of the same name
gets a copy of the one from the
<emphasis remap='B'>%default</emphasis>
section.
There may be multiple
<emphasis remap='B'>%default</emphasis>
sections of a given type,
but only one default may be supplied for any specific parameter name,
and all
<emphasis remap='B'>%default</emphasis>
sections of a given type must precede all non-<emphasis remap='B'>%default</emphasis>
sections of that type.
<emphasis remap='B'>%default</emphasis>
sections may not contain
<emphasis remap='B'>also</emphasis>
or
<emphasis remap='B'>alsoflip</emphasis>
parameters.</para>

<para>Currently there are two types of section:
a
<emphasis remap='B'>config</emphasis>
section specifies general configuration information for IPsec,
while a
<emphasis remap='B'>conn</emphasis>
section specifies an IPsec connection.</para>
</refsect1>

<refsect1 id='conn_sections'><title>CONN SECTIONS</title>
<para>A
<emphasis remap='B'>conn</emphasis>
section contains a
<emphasis remap='I'>connection specification</emphasis>,
defining a network connection to be made using IPsec.
The name given is arbitrary, and is used to identify the connection to
<citerefentry><refentrytitle>ipsec_auto</refentrytitle><manvolnum>8</manvolnum></citerefentry>
and
<citerefentry><refentrytitle>ipsec_manual</refentrytitle><manvolnum>8</manvolnum></citerefentry>.
Here's a simple example:</para>

<!-- .ne 10 -->
<literallayout remap='.nf'>
<!-- .ta 1c -->
<emphasis remap='B'>
conn snt
	left=10.11.11.1
	leftsubnet=10.0.1.0/24
	leftnexthop=172.16.55.66
	right=192.168.22.1
	rightsubnet=10.0.2.0/24
	rightnexthop=172.16.88.99
	keyingtries=%forever
</emphasis>
</literallayout> <!-- .fi -->

<para>A note on terminology...
In automatic keying, there are two kinds of communications going on:
transmission of user IP packets, and gateway-to-gateway negotiations for
keying, rekeying, and general control.
The data path (a set of &ldquo;IPsec SAs&rdquo;) used for user packets is herein
referred to as the &ldquo;connection&rdquo;;
the path used for negotiations (built with &ldquo;ISAKMP SAs&rdquo;) is referred to as
the &ldquo;keying channel&rdquo;.</para>

<para>To avoid trivial editing of the configuration file to suit it to each system
involved in a connection,
connection specifications are written in terms of
<emphasis remap='I'>left</emphasis>
and
<emphasis remap='I'>right</emphasis>
participants,
rather than in terms of local and remote.
Which participant is considered
<emphasis remap='I'>left</emphasis>
or
<emphasis remap='I'>right</emphasis>
is arbitrary;
IPsec figures out which one it is being run on based on internal information.
This permits using identical connection specifications on both ends.
There are cases where there is no symmetry; a good convention is to
use
<emphasis remap='I'>left</emphasis>
for the local side and
<emphasis remap='I'>right</emphasis>
for the remote side (the first letters are a good mnemonic).</para>

<para>Many of the parameters relate to one participant or the other;
only the ones for
<emphasis remap='I'>left</emphasis>
are listed here, but every parameter whose name begins with
<emphasis remap='B'>left</emphasis>
has a
<emphasis remap='B'>right</emphasis>
counterpart,
whose description is the same but with
<emphasis remap='B'>left</emphasis>
and
<emphasis remap='B'>right</emphasis>
reversed.</para>

<para>Parameters are optional unless marked &ldquo;(required)&rdquo;;
a parameter required for manual keying need not be included for
a connection which will use only automatic keying, and vice versa.</para>

<refsect2 id='conn_parameters__general'><title>CONN PARAMETERS:  GENERAL</title>
<para>The following parameters are relevant to both automatic and manual keying.
Unless otherwise noted,
for a connection to work,
in general it is necessary for the two ends to agree exactly
on the values of these parameters.</para>
<variablelist remap='TP'>
  <varlistentry>
  <term><emphasis remap='B'>type</emphasis></term>
  <listitem>
<para>the type of the connection; currently the accepted values
are
<emphasis remap='B'>tunnel</emphasis>
(the default)
signifying a host-to-host, host-to-subnet, or subnet-to-subnet tunnel;
<emphasis remap='B'>transport</emphasis>,
signifying host-to-host transport mode;
<emphasis remap='B'>passthrough</emphasis>,
signifying that no IPsec processing should be done at all;
<emphasis remap='B'>drop</emphasis>,
signifying that packets should be discarded; and
<emphasis remap='B'>reject</emphasis>,
signifying that packets should be discarded and a diagnostic ICMP returned.</para>
  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>left</emphasis></term>
  <listitem>
<para>(required)
the IP address of the left participant's public-network interface,
in any form accepted by
<citerefentry><refentrytitle>ipsec_ttoaddr</refentrytitle><manvolnum>3</manvolnum></citerefentry>
or one of several magic values.
If it is
<emphasis remap='B'>%defaultroute</emphasis>,
and
the
<emphasis remap='B'>config</emphasis>
<emphasis remap='B'>setup</emphasis>
section's,
<emphasis remap='B'>interfaces</emphasis>
specification contains
<emphasis remap='B'>%defaultroute,</emphasis>
<emphasis remap='B'>left</emphasis>
will be filled in automatically with the local address
of the default-route interface (as determined at IPsec startup time);
this also overrides any value supplied for
<emphasis remap='B'>leftnexthop</emphasis>.
(Either
<emphasis remap='B'>left</emphasis>
or
<emphasis remap='B'>right</emphasis>
may be
<emphasis remap='B'>%defaultroute</emphasis>,
but not both.)
The value
<emphasis remap='B'>%any</emphasis>
signifies an address to be filled in (by automatic keying) during
negotiation.
The value
<emphasis remap='B'>%opportunistic</emphasis>
signifies that both
<emphasis remap='B'>left</emphasis>
and
<emphasis remap='B'>leftnexthop</emphasis>
are to be filled in (by automatic keying) from DNS data for
<emphasis remap='B'>left</emphasis>'s
client.
The values
<emphasis remap='B'>%group</emphasis>
and
<emphasis remap='B'>%opportunisticgroup</emphasis>
makes this a policy group conn: one that will be instantiated
into a regular or opportunistic conn for each CIDR block listed in the
policy group file with the same name as the conn.</para>
  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>leftsubnet</emphasis></term>
  <listitem>
<para>private subnet behind the left participant, expressed as
<emphasis remap='I'>network</emphasis><emphasis remap='B'>/</emphasis><emphasis remap='I'>netmask</emphasis>
(actually, any form acceptable to
<citerefentry><refentrytitle>ipsec_ttosubnet</refentrytitle><manvolnum>3</manvolnum></citerefentry>);
if omitted, essentially assumed to be <emphasis remap='I'>left</emphasis><filename>/32</filename>,
signifying that the left end of the connection goes to the left participant only</para>
  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>leftnexthop</emphasis></term>
  <listitem>
<para>next-hop gateway IP address for the left participant's connection
to the public network;
defaults to
<emphasis remap='B'>%direct</emphasis>
(meaning
<emphasis remap='I'>right</emphasis>).
If the value is to be overridden by the
<emphasis remap='B'>left=%defaultroute</emphasis>
method (see above),
an explicit value must
<emphasis remap='I'>not</emphasis>
be given.
If that method is not being used,
but
<emphasis remap='B'>leftnexthop</emphasis>
is
<emphasis remap='B'>%defaultroute</emphasis>,
and
<emphasis remap='B'>interfaces=%defaultroute</emphasis>
is used in the
<emphasis remap='B'>config</emphasis>
<emphasis remap='B'>setup</emphasis>
section,
the next-hop gateway address of the default-route interface
will be used.
The magic value
<emphasis remap='B'>%direct</emphasis>
signifies a value to be filled in (by automatic keying)
with the peer's address.
Relevant only locally, other end need not agree on it.</para>
  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>leftupdown</emphasis></term>
  <listitem>
<para>what &ldquo;updown&rdquo; script to run to adjust routing and/or firewalling
when the status of the connection
changes (default
<emphasis remap='B'>ipsec _updown</emphasis>).
May include positional parameters separated by white space
(although this requires enclosing the whole string in quotes);
including shell metacharacters is unwise.
See
<citerefentry><refentrytitle>ipsec_pluto</refentrytitle><manvolnum>8</manvolnum></citerefentry>
for details.
Relevant only locally, other end need not agree on it.</para>
  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>leftfirewall</emphasis></term>
  <listitem>
<para>whether the left participant is doing forwarding-firewalling
(including masquerading) for traffic from <emphasis remap='I'>leftsubnet</emphasis>,
which should be turned off (for traffic to the other subnet)
once the connection is established;
acceptable values are
<emphasis remap='B'>yes</emphasis>
and (the default)
<emphasis remap='B'>no</emphasis>.
May not be used in the same connection description with
<emphasis remap='B'>leftupdown</emphasis>.
Implemented as a parameter to the default
<emphasis remap='I'>updown</emphasis>
script.
See notes below.
Relevant only locally, other end need not agree on it.</para>
  </listitem>
  </varlistentry>
</variablelist>

<para>If one or both security gateways are doing forwarding firewalling
(possibly including masquerading),
and this is specified using the firewall parameters,
tunnels established with IPsec are exempted from it
so that packets can flow unchanged through the tunnels.
(This means that all subnets connected in this manner must have
distinct, non-overlapping subnet address blocks.)
This is done by the default
<emphasis remap='I'>updown</emphasis>
script (see
<citerefentry><refentrytitle>ipsec_pluto</refentrytitle><manvolnum>8</manvolnum></citerefentry>).</para>

<para>The implementation of this makes certain assumptions about firewall setup,
notably the use of the old
<emphasis remap='I'>ipfwadm</emphasis>
interface to the firewall.
In situations calling for more control,
it may be preferable for the user to supply his own
<emphasis remap='I'>updown</emphasis>
script,
which makes the appropriate adjustments for his system.</para>
</refsect2>

<refsect2 id='conn_parameters__automatic_keying'><title>CONN PARAMETERS:  AUTOMATIC KEYING</title>
<para>The following parameters are relevant only to automatic keying,
and are ignored in manual keying.
Unless otherwise noted,
for a connection to work,
in general it is necessary for the two ends to agree exactly
on the values of these parameters.</para>
<variablelist remap='TP'>
  <varlistentry>
  <term><emphasis remap='B'>keyexchange</emphasis></term>
  <listitem>
<para>method of key exchange;
the default and currently the only accepted value is
<emphasis remap='B'>ike</emphasis></para>
  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>auto</emphasis></term>
  <listitem>
<para>what operation, if any, should be done automatically at IPsec startup;
currently-accepted values are
<emphasis remap='B'>add</emphasis>
(signifying an
<emphasis remap='B'>ipsec auto</emphasis>
<option>--add</option>),
<emphasis remap='B'>route</emphasis>
(signifying that plus an
<emphasis remap='B'>ipsec auto</emphasis>
<option>--route</option>),
<emphasis remap='B'>start</emphasis>
(signifying that plus an
<emphasis remap='B'>ipsec auto</emphasis>
<option>--up</option>),
<emphasis remap='B'>manual</emphasis>
(signifying an
<emphasis remap='B'>ipsec</emphasis>
<emphasis remap='B'>manual</emphasis>
<option>--up</option>),
and
<emphasis remap='B'>ignore</emphasis>
(also the default) (signifying no automatic startup operation).
See the
<emphasis remap='B'>config</emphasis>
<emphasis remap='B'>setup</emphasis>
discussion below.
Relevant only locally, other end need not agree on it
(but in general, for an intended-to-be-permanent connection,
both ends should use
<emphasis remap='B'>auto=start</emphasis>
to ensure that any reboot causes immediate renegotiation).</para>
  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>auth</emphasis></term>
  <listitem>
<para>whether authentication should be done as part of
ESP encryption, or separately using the AH protocol;
acceptable values are
<emphasis remap='B'>esp</emphasis>
(the default) and
<emphasis remap='B'>ah</emphasis>.</para>
  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>authby</emphasis></term>
  <listitem>
<para>how the two security gateways should authenticate each other;
acceptable values are
<emphasis remap='B'>secret</emphasis>
for shared secrets,
<emphasis remap='B'>rsasig</emphasis>
for RSA digital signatures (the default),
<emphasis remap='B'>secret|rsasig</emphasis>
for either, and
<emphasis remap='B'>never</emphasis>
if negotiation is never to be attempted or accepted (useful for shunt-only conns).
Digital signatures are superior in every way to shared secrets.</para>
  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>leftid</emphasis></term>
  <listitem>
<para>how
the left participant
should be identified for authentication;
defaults to
<emphasis remap='B'>left</emphasis>.
Can be an IP address (in any
<citerefentry><refentrytitle>ipsec_ttoaddr</refentrytitle><manvolnum>3</manvolnum></citerefentry>
syntax)
or a fully-qualified domain name preceded by
<emphasis remap='B'>@</emphasis>
(which is used as a literal string and not resolved).
The magic value
<emphasis remap='B'>%myid</emphasis>
stands for the current setting of <emphasis remap='I'>myid</emphasis>.
This is set in <emphasis remap='B'>config setup</emphasis> or by <citerefentry><refentrytitle>ipsec_whack</refentrytitle><manvolnum>8</manvolnum></citerefentry>), or, if not set,
it is the IP address in <emphasis remap='B'>%defaultroute</emphasis> (if that is supported by a TXT record in its reverse domain), or otherwise
it is the system's hostname (if that is supported by a TXT record in its forward domain), or otherwise it is undefined.</para>
  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>leftrsasigkey</emphasis></term>
  <listitem>
<para>the left participant's
public key for RSA signature authentication,
in RFC 2537 format using
<citerefentry><refentrytitle>ipsec_ttodata</refentrytitle><manvolnum>3</manvolnum></citerefentry>
encoding.
The magic value
<emphasis remap='B'>%none</emphasis>
means the same as not specifying a value (useful to override a default).
The value
<emphasis remap='B'>%dnsondemand</emphasis>
(the default)
means the key is to be fetched from DNS at the time it is needed.
The value
<emphasis remap='B'>%dnsonload</emphasis>
means the key is to be fetched from DNS at the time
the connection description is read from
<emphasis remap='I'>ipsec.conf</emphasis>;
currently this will be treated as
<emphasis remap='B'>%none</emphasis>
if
<emphasis remap='B'>right=%any</emphasis>
or
<emphasis remap='B'>right=%opportunistic</emphasis>.
The value
<emphasis remap='B'>%dns</emphasis>
is currently treated as
<emphasis remap='B'>%dnsonload</emphasis>
but will change to
<emphasis remap='B'>%dnsondemand</emphasis>
in the future.
The identity used for the left participant
must be a specific host, not
<emphasis remap='B'>%any</emphasis>
or another magic value.
The value 
<emphasis remap='B'>%cert</emphasis>
will load the information required from a certificate defined in
<emphasis remap='B'>%leftcert</emphasis>
and automatically define leftid for you.
<emphasis remap='B'>Caution:</emphasis>
if two connection descriptions
specify different public keys for the same
<emphasis remap='B'>leftid</emphasis>,
confusion and madness will ensue.</para>
  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>leftrsasigkey2</emphasis></term>
  <listitem>
<para>if present, a second public key.
Either key can authenticate the signature, allowing for key rollover.</para>
  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>leftcert</emphasis></term>
  <listitem>
<para>If you are using 
<emphasis remap='B'>leftrsasigkey=%cert</emphasis>
this defines the certificate you would like to use. It should point to a X.509
encoded certificate file. If you do not specify a full pathname, by default it
will look in /etc/ipsec.d/certs.</para>
  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>leftsendcert</emphasis></term>
  <listitem>
<para>This option configures when Openswan will send X.509 certificates to the remote
host. Acceptable values are 
<emphasis remap='B'>yes|always</emphasis>
(signifying that we should always send a certificate),
<emphasis remap='B'>ifasked</emphasis>
(signifying that we should send a certificate if the remote end asks for it), and
<emphasis remap='B'>no|never</emphasis>
(signifying that we will never send a X.509 certificate).
The default for this option is 
<emphasis remap='B'>ifasked</emphasis>
which may break compatibility with other vendor's IPSec implementations, such as
Cisco and SafeNet. If you find that you are getting errors about no ID/Key found,
you likely need to set this to
<emphasis remap='B'>always.</emphasis></para>
  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>xauth</emphasis></term>
  <listitem>
<para>Use XAUTH / Mode Config for this connection.  This uses PAM for authentication
currently, and it not well documented.  Use the source :)  Acceptable values are
<emphasis remap='B'>yes</emphasis>
or 
<emphasis remap='B'>no</emphasis>
(the default).</para>
  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>dpddelay</emphasis></term>
  <listitem>
<para>Set the delay (in seconds) between Dead Peer Dectection
(RFC 3706) keepalives (R_U_THERE, R_U_THERE_ACK)
that are sent for this connection (default
<literal>30</literal>
seconds).  If dpdtimeout is set, but not dpddelay, dpddelay will be set
to the default.</para>
  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>dpdtimeout</emphasis></term>
  <listitem>
<para>Set the length of time (in seconds) we will idle without hearing either an
R_U_THERE poll from our peer, or an R_U_THERE_ACK reply.  After this period
has elapsed with no response and no traffic, we will declare the peer dead,
and remove the SA (default
<literal>120</literal>
seconds).  If dpddelay is set, but not dpdtimeout, dpdtimeout will be set
to the default.</para>
  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>dpdaction</emphasis></term>
  <listitem>
<para>When a DPD enabled peer is declared dead, what action should be taken.
<emphasis remap='B'>hold (default) means the eroute will be put into %hold status, while</emphasis>
<emphasis remap='B'>clear means the eroute and SA with both be cleared. dpdaction=clear is</emphasis>
really only usefull on the server of a Road Warrior config.</para>
  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>pfs</emphasis></term>
  <listitem>
<para>whether Perfect Forward Secrecy of keys is desired on the connection's
keying channel
(with PFS, penetration of the key-exchange protocol
does not compromise keys negotiated earlier);
acceptable values are
<emphasis remap='B'>yes</emphasis>
(the default)
and
<emphasis remap='B'>no</emphasis>.</para>
  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>keylife</emphasis></term>
  <listitem>
<para>how long a particular instance of a connection
(a set of encryption/authentication keys for user packets) should last,
from successful negotiation to expiry;
acceptable values are an integer optionally followed by
<emphasis remap='B'>s</emphasis>
(a time in seconds)
or a decimal number followed by
<emphasis remap='B'>m</emphasis>,
<emphasis remap='B'>h</emphasis>,
or
<emphasis remap='B'>d</emphasis>
(a time
in minutes, hours, or days respectively)
(default
<emphasis remap='B'>8.0h</emphasis>,
maximum
<emphasis remap='B'>24h</emphasis>).
Normally, the connection is renegotiated (via the keying channel)
before it expires.
The two ends need not exactly agree on
<emphasis remap='B'>keylife</emphasis>,
although if they do not,
there will be some clutter of superseded connections on the end
which thinks the lifetime is longer.</para>
  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>rekey</emphasis></term>
  <listitem>
<para>whether a connection should be renegotiated when it is about to expire;
acceptable values are
<emphasis remap='B'>yes</emphasis>
(the default)
and
<emphasis remap='B'>no</emphasis>.
The two ends need not agree,
but while a value of
<emphasis remap='B'>no</emphasis>
prevents Pluto from requesting renegotiation,
it does not prevent responding to renegotiation requested from the other end,
so
<emphasis remap='B'>no</emphasis>
will be largely ineffective unless both ends agree on it.</para>
  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>rekeymargin</emphasis></term>
  <listitem>
<para>how long before connection expiry or keying-channel expiry
should attempts to
negotiate a replacement
begin; acceptable values as for
<emphasis remap='B'>keylife</emphasis>
(default
<emphasis remap='B'>9m</emphasis>).
Relevant only locally, other end need not agree on it.</para>
  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>rekeyfuzz</emphasis></term>
  <listitem>
<para>maximum percentage by which
<emphasis remap='B'>rekeymargin</emphasis>
should be randomly increased to randomize rekeying intervals
(important for hosts with many connections);
acceptable values are an integer,
which may exceed 100,
followed by a `%'
(default set by
<citerefentry><refentrytitle>ipsec_pluto</refentrytitle><manvolnum>8</manvolnum></citerefentry>,
currently
<emphasis remap='B'>100%</emphasis>).
The value of
<emphasis remap='B'>rekeymargin</emphasis>,
after this random increase,
must not exceed
<emphasis remap='B'>keylife</emphasis>.
The value
<emphasis remap='B'>0%</emphasis>
will suppress time randomization.
Relevant only locally, other end need not agree on it.</para>
  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>keyingtries</emphasis></term>
  <listitem>
<para>how many attempts (a whole number or <emphasis remap='B'>%forever</emphasis>) should be made to
negotiate a connection, or a replacement for one, before giving up
(default
<emphasis remap='B'>%forever</emphasis>).
The value <emphasis remap='B'>%forever</emphasis>
means &ldquo;never give up&rdquo; (obsolete: this can be written <literal>0</literal>).
Relevant only locally, other end need not agree on it.</para>
  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>ikelifetime</emphasis></term>
  <listitem>
<para>how long the keying channel of a connection (buzzphrase:  &ldquo;ISAKMP SA&rdquo;)
should last before being renegotiated;
acceptable values as for
<emphasis remap='B'>keylife</emphasis>
(default set by
<citerefentry><refentrytitle>ipsec_pluto</refentrytitle><manvolnum>8</manvolnum></citerefentry>,
currently
<emphasis remap='B'>1h</emphasis>,
maximum
<emphasis remap='B'>8h</emphasis>).
The two-ends-disagree case is similar to that of
<emphasis remap='B'>keylife</emphasis>.</para>
  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>compress</emphasis></term>
  <listitem>
<para>whether IPComp compression of content is proposed on the connection
(link-level compression does not work on encrypted data,
so to be effective, compression must be done <emphasis remap='I'>before</emphasis> encryption);
acceptable values are
<emphasis remap='B'>yes</emphasis>
and
<emphasis remap='B'>no</emphasis>
(the default).
The two ends need not agree.
A value of
<emphasis remap='B'>yes</emphasis>
causes IPsec to propose both compressed and uncompressed,
and prefer compressed.
A value of
<emphasis remap='B'>no</emphasis>
prevents IPsec from proposing compression;
a proposal to compress will still be accepted.</para>
  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>disablearrivalcheck</emphasis></term>
  <listitem>
<para>whether KLIPS's normal tunnel-exit check
(that a packet emerging from a tunnel has plausible addresses in its header)
should be disabled;
acceptable values are
<emphasis remap='B'>yes</emphasis>
and
<emphasis remap='B'>no</emphasis>
(the default).
Tunnel-exit checks improve security and do not break any normal configuration.
Relevant only locally, other end need not agree on it.</para>
  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='B'>failureshunt</emphasis></term>
  <listitem>
<para>what to do with packets when negotiation fails.
The default is
<emphasis remap='B'>none</emphasis>:
no shunt;
<emphasis remap='B'>passthrough</emphasis>,
<emphasis remap='B'>drop</emphasis>,
and
<emphasis remap='B'>reject</emphasis>
have the obvious meanings.</para>
  </listitem>
  </varlistentry>
</variablelist>
</refsect2>

