--- /distros/kernel/linux-2.6.11.2/./net/ipv4/udp.c	2005-03-09 03:11:09.000000000 -0500
+++ ./net/ipv4/udp.c	2005-04-09 20:46:46.000000000 -0400
@@ -109,2 +109,3 @@
 #include <net/xfrm.h>
+#include <net/xfrmudp.h>
 
@@ -114,2 +115,4 @@
 
+static xfrm4_rcv_encap_t xfrm4_rcv_encap_func;
+
 DEFINE_SNMP_STAT(struct udp_mib, udp_statistics);
@@ -894,2 +897,38 @@
 
+#if defined(CONFIG_XFRM) || defined(CONFIG_IPSEC_NAT_TRAVERSAL)
+
+/* if XFRM isn't a module, then register it directly. */
+#if 0 && !defined(CONFIG_XFRM_MODULE) && !defined(CONFIG_IPSEC_NAT_TRAVERSAL)
+static xfrm4_rcv_encap_t xfrm4_rcv_encap_func = xfrm4_rcv_encap;
+#else
+static xfrm4_rcv_encap_t xfrm4_rcv_encap_func = NULL;
+#endif
+
+int udp4_register_esp_rcvencap(xfrm4_rcv_encap_t func
+			       , xfrm4_rcv_encap_t *oldfunc)
+{
+  if(oldfunc != NULL) {
+    *oldfunc = xfrm4_rcv_encap_func;
+  }
+
+#if 0
+  if(xfrm4_rcv_encap_func != NULL)
+    return -1;
+#endif
+
+  xfrm4_rcv_encap_func = func;
+  return 0;
+}
+
+int udp4_unregister_esp_rcvencap(xfrm4_rcv_encap_t func)
+{
+  if(xfrm4_rcv_encap_func != func)
+    return -1;
+
+  xfrm4_rcv_encap_func = NULL;
+  return 0;
+}
+#endif /* CONFIG_XFRM_MODULE || CONFIG_IPSEC_NAT_TRAVERSAL */
+
+
 /* return:
@@ -901,5 +940,5 @@
 {
-#ifndef CONFIG_XFRM
+#if !defined(CONFIG_XFRM) && !defined(CONFIG_IPSEC_NAT_TRAVERSAL)
 	return 1; 
-#else
+#else /* either CONFIG_XFRM or CONFIG_IPSEC_NAT_TRAVERSAL */
 	struct udp_sock *up = udp_sk(sk);
@@ -915,3 +954,3 @@
 	if (udpdata > skb->tail)
-		return 1;
+		return 2;
 
@@ -919,3 +958,3 @@
 	if (!encap_type)
-		return 1;
+		return 3;
 
@@ -934,3 +973,3 @@
 			/* Must be an IKE packet.. pass it through */
-			return 1;
+			return 4;
 		break;
@@ -947,3 +986,3 @@
 			/* Must be an IKE packet.. pass it through */
-			return 1;
+			return 5;
 		break;
@@ -956,2 +995,4 @@
 	 */
+	if (skb_cloned(skb) && pskb_expand_head(skb, 0, 0, GFP_ATOMIC))
+		return 0;
 
@@ -1019,5 +1060,9 @@
 		if (ret < 0) {
-			/* process the ESP packet */
-			ret = xfrm4_rcv_encap(skb, up->encap_type);
-			UDP_INC_STATS_BH(UDP_MIB_INDATAGRAMS);
+			if(xfrm4_rcv_encap_func != NULL) {
+			  ret = (*xfrm4_rcv_encap_func)(skb, up->encap_type);
+			  UDP_INC_STATS_BH(UDP_MIB_INDATAGRAMS);
+			} else {
+			  UDP_INC_STATS_BH(UDP_MIB_INERRORS);
+			  ret = 1;
+			}
 			return -ret;
@@ -1574 +1619,7 @@
 #endif
+
+#if defined(CONFIG_IPSEC_NAT_TRAVERSAL)
+EXPORT_SYMBOL(udp4_register_esp_rcvencap);
+EXPORT_SYMBOL(udp4_unregister_esp_rcvencap);
+#endif
+
